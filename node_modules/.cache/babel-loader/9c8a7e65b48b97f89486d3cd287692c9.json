{"ast":null,"code":"var _jsxFileName = \"/home/coelho/Projetos-Trybe/Projetos-Frontend/sd-023-a-project-recipes-app/src/hooks/RecipesProvider.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport PropTypes from 'prop-types'; // import { useHistory } from 'react-router-dom';\n\nimport RecipesContext from './RecipesContext';\nimport { fetchDrinksByFistLetter, fetchDrinksByIngredient, fetchDrinksByName } from '../services/fetchDrinks';\nimport { fetchMealsByFistLetter, fetchMealsByIngredient, fetchMealsByName } from '../services/fetchMeals';\nimport { fetchMealsById, fetchDrinksById } from '../services/fetchById';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst alertNull = 'Sorry, we haven\\'t found any recipes for these filters.';\n\nfunction RecipesProvider(_ref) {\n  _s();\n\n  let {\n    children\n  } = _ref;\n  // const history = useHistory();\n  const [personalData, setPersonalData] = useState({\n    email: '',\n    password: ''\n  });\n  const [disabled, setDisabled] = useState({\n    isDisabled: true\n  });\n  const [filterType, setFilterType] = useState({});\n  const [filterValue, setFilterValue] = useState({});\n  const [mealsData, setMealsData] = useState([]);\n  const [drinkData, setDrinkData] = useState([]);\n  const [suggestionsToRender, setSuggestionsToRender] = useState([]);\n\n  const validateEmail = () => {\n    const {\n      email,\n      password\n    } = personalData;\n    const minPasswordLength = 6;\n    const regexEmail = /\\S+@\\S+\\.\\S+/;\n    const validated = regexEmail.test(email);\n\n    if (validated && password.length >= minPasswordLength) {\n      setDisabled({\n        isDisabled: false\n      });\n    } else {\n      setDisabled({\n        isDisabled: true\n      });\n    }\n  };\n\n  const handleChange = _ref2 => {\n    let {\n      target: {\n        name,\n        value\n      }\n    } = _ref2;\n    setPersonalData({ ...personalData,\n      [name]: value\n    });\n    validateEmail();\n  };\n\n  const removeRecipeFromLocalStorage = id => {\n    const favoriteRecipes = JSON.parse(localStorage.getItem('favoriteRecipes'));\n    const newFavoriteRecipes = favoriteRecipes.filter(recipe => recipe.id !== id);\n    localStorage.setItem('favoriteRecipes', JSON.stringify(newFavoriteRecipes));\n  };\n\n  const savePersonalData = () => {\n    localStorage.setItem('user', JSON.stringify({\n      email: personalData.email\n    }));\n    localStorage.setItem('mealsToken', 1);\n    localStorage.setItem('drinksToken', 1);\n    localStorage.setItem('doneRecipes', '[]');\n    localStorage.setItem('favoriteRecipes', '[]');\n    localStorage.setItem('inProgressRecipes', '{}');\n  };\n\n  const cleanupLocalStorage = () => {\n    localStorage.removeItem('user');\n    localStorage.removeItem('mealsToken');\n    localStorage.removeItem('drinksToken');\n    localStorage.removeItem('doneRecipes');\n    localStorage.removeItem('favoriteRecipes');\n    localStorage.removeItem('inProgressRecipes');\n  };\n\n  const saveRecipeToLocalStorage = async id => {\n    let rawRecipe;\n\n    try {\n      rawRecipe = await fetchMealsById(id);\n    } catch {\n      rawRecipe = await fetchDrinksById(id);\n    }\n\n    const [favRecipe] = rawRecipe.meals || rawRecipe.drinks;\n    const favoriteRecipe = {\n      type: favRecipe.idMeal ? 'meal' : 'drink',\n      id: favRecipe.idMeal || favRecipe.idDrink,\n      category: favRecipe.strCategory,\n      nationality: favRecipe.strArea || '',\n      alcoholicOrNot: favRecipe.strAlcoholic || '',\n      name: favRecipe.strMeal || favRecipe.strDrink,\n      image: favRecipe.strMealThumb || favRecipe.strDrinkThumb\n    };\n    let favoriteRecipes = JSON.parse(localStorage.getItem('favoriteRecipes'));\n\n    if (!favoriteRecipes) {\n      savePersonalData();\n      favoriteRecipes = JSON.parse(localStorage.getItem('favoriteRecipes'));\n    }\n\n    favoriteRecipes.push(favoriteRecipe);\n    localStorage.setItem('favoriteRecipes', JSON.stringify(favoriteRecipes));\n  };\n\n  const isRecipeOnLocalStorage = id => {\n    const favoriteRecipes = JSON.parse(localStorage.getItem('favoriteRecipes'));\n\n    if (favoriteRecipes) {\n      return favoriteRecipes.some(recipe => String(recipe.id) === String(id));\n    }\n  };\n\n  const fetchMeals = async _ref3 => {\n    let {\n      filter\n    } = _ref3;\n\n    switch (filterType.filter) {\n      case 'ingredients':\n        {\n          const byIngredients = await fetchMealsByIngredient(filter);\n\n          if (byIngredients.meals === null) {\n            global.alert(alertNull);\n          } else {\n            setMealsData([...byIngredients.meals]);\n          }\n\n          break;\n        }\n\n      case 'name':\n        {\n          const byName = await fetchMealsByName(filter);\n\n          if (byName.meals === null) {\n            global.alert(alertNull);\n          }\n\n          if (byName.meals) {\n            setMealsData([...byName.meals]);\n          }\n\n          break;\n        }\n\n      case 'firstLetter':\n        {\n          if (filter.length > 1) {\n            global.alert('Your search must have only 1 (one) character');\n          } else {\n            const byLetter = await fetchMealsByFistLetter(filter);\n\n            if (byLetter.meals === null) {\n              global.alert(alertNull);\n            } else {\n              setMealsData([...byLetter.meals]);\n            }\n          }\n\n          break;\n        }\n\n      default:\n        {\n          return 'null';\n        }\n    }\n  };\n\n  const fetchDrinks = async _ref4 => {\n    let {\n      filter\n    } = _ref4;\n\n    switch (filterType.filter) {\n      case 'ingredients':\n        {\n          const byIngredients = await fetchDrinksByIngredient(filter);\n\n          if (byIngredients) {\n            setDrinkData([...byIngredients.drinks]);\n          }\n\n          break;\n        }\n\n      case 'name':\n        {\n          const byName = await fetchDrinksByName(filter);\n\n          if (byName.drinks === null) {\n            global.alert(alertNull);\n          }\n\n          if (byName.drinks) {\n            setDrinkData([...byName.drinks]);\n          }\n\n          break;\n        }\n\n      case 'firstLetter':\n        {\n          if (filter.length > 1) {\n            global.alert('Your search must have only 1 (one) character');\n          } else {\n            const byLetter = await fetchDrinksByFistLetter(filter);\n\n            if (byLetter.drinks === null) {\n              global.alert(alertNull);\n            } else {\n              setDrinkData([...byLetter.drinks]);\n            }\n          }\n\n          break;\n        }\n\n      default:\n        {\n          return 'null';\n        }\n    }\n  };\n\n  const filterHandleChange = _ref5 => {\n    let {\n      target: {\n        value\n      }\n    } = _ref5;\n    setFilterValue({ ...filterValue,\n      filter: value\n    });\n  };\n\n  const context = {\n    handleChange,\n    disabled,\n    personalData,\n    savePersonalData,\n    setFilterType,\n    filterType,\n    filterValue,\n    setFilterValue,\n    filterHandleChange,\n    fetchMeals,\n    fetchDrinks,\n    mealsData,\n    drinkData,\n    setMealsData,\n    setDrinkData,\n    setPersonalData,\n    cleanupLocalStorage,\n    saveRecipeToLocalStorage,\n    removeRecipeFromLocalStorage,\n    isRecipeOnLocalStorage,\n    suggestionsToRender,\n    setSuggestionsToRender\n  };\n  return /*#__PURE__*/_jsxDEV(RecipesContext.Provider, {\n    value: context,\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 226,\n    columnNumber: 5\n  }, this);\n}\n\n_s(RecipesProvider, \"Gd2THNQMBGpeoChK7f8/H9uJJXU=\");\n\n_c = RecipesProvider;\nRecipesProvider.propTypes = {\n  children: PropTypes.node.isRequired\n};\nexport default RecipesProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"RecipesProvider\");","map":{"version":3,"names":["React","useState","PropTypes","RecipesContext","fetchDrinksByFistLetter","fetchDrinksByIngredient","fetchDrinksByName","fetchMealsByFistLetter","fetchMealsByIngredient","fetchMealsByName","fetchMealsById","fetchDrinksById","alertNull","RecipesProvider","children","personalData","setPersonalData","email","password","disabled","setDisabled","isDisabled","filterType","setFilterType","filterValue","setFilterValue","mealsData","setMealsData","drinkData","setDrinkData","suggestionsToRender","setSuggestionsToRender","validateEmail","minPasswordLength","regexEmail","validated","test","length","handleChange","target","name","value","removeRecipeFromLocalStorage","id","favoriteRecipes","JSON","parse","localStorage","getItem","newFavoriteRecipes","filter","recipe","setItem","stringify","savePersonalData","cleanupLocalStorage","removeItem","saveRecipeToLocalStorage","rawRecipe","favRecipe","meals","drinks","favoriteRecipe","type","idMeal","idDrink","category","strCategory","nationality","strArea","alcoholicOrNot","strAlcoholic","strMeal","strDrink","image","strMealThumb","strDrinkThumb","push","isRecipeOnLocalStorage","some","String","fetchMeals","byIngredients","global","alert","byName","byLetter","fetchDrinks","filterHandleChange","context","propTypes","node","isRequired"],"sources":["/home/coelho/Projetos-Trybe/Projetos-Frontend/sd-023-a-project-recipes-app/src/hooks/RecipesProvider.jsx"],"sourcesContent":["import React, { useState } from 'react';\nimport PropTypes from 'prop-types';\n// import { useHistory } from 'react-router-dom';\nimport RecipesContext from './RecipesContext';\nimport {\n  fetchDrinksByFistLetter,\n  fetchDrinksByIngredient,\n  fetchDrinksByName,\n} from '../services/fetchDrinks';\nimport {\n  fetchMealsByFistLetter,\n  fetchMealsByIngredient,\n  fetchMealsByName,\n} from '../services/fetchMeals';\nimport { fetchMealsById, fetchDrinksById } from '../services/fetchById';\n\nconst alertNull = 'Sorry, we haven\\'t found any recipes for these filters.';\nfunction RecipesProvider({ children }) {\n  // const history = useHistory();\n  const [personalData, setPersonalData] = useState({\n    email: '',\n    password: '',\n  });\n  const [disabled, setDisabled] = useState({\n    isDisabled: true,\n  });\n  const [filterType, setFilterType] = useState({});\n  const [filterValue, setFilterValue] = useState({});\n  const [mealsData, setMealsData] = useState([]);\n  const [drinkData, setDrinkData] = useState([]);\n  const [suggestionsToRender, setSuggestionsToRender] = useState([]);\n  const validateEmail = () => {\n    const { email, password } = personalData;\n    const minPasswordLength = 6;\n    const regexEmail = /\\S+@\\S+\\.\\S+/;\n    const validated = regexEmail.test(email);\n    if (validated && password.length >= minPasswordLength) {\n      setDisabled({\n        isDisabled: false,\n      });\n    } else {\n      setDisabled({\n        isDisabled: true,\n      });\n    }\n  };\n  const handleChange = ({ target: { name, value } }) => {\n    setPersonalData({\n      ...personalData,\n      [name]: value,\n    });\n    validateEmail();\n  };\n\n  const removeRecipeFromLocalStorage = (id) => {\n    const favoriteRecipes = JSON.parse(localStorage.getItem('favoriteRecipes'));\n    const newFavoriteRecipes = favoriteRecipes.filter((recipe) => recipe.id !== id);\n    localStorage.setItem('favoriteRecipes', JSON.stringify(newFavoriteRecipes));\n  };\n  const savePersonalData = () => {\n    localStorage.setItem('user', JSON.stringify({ email: personalData.email }));\n    localStorage.setItem('mealsToken', 1);\n    localStorage.setItem('drinksToken', 1);\n    localStorage.setItem('doneRecipes', '[]');\n    localStorage.setItem('favoriteRecipes', '[]');\n    localStorage.setItem('inProgressRecipes', '{}');\n  };\n  const cleanupLocalStorage = () => {\n    localStorage.removeItem('user');\n    localStorage.removeItem('mealsToken');\n    localStorage.removeItem('drinksToken');\n    localStorage.removeItem('doneRecipes');\n    localStorage.removeItem('favoriteRecipes');\n    localStorage.removeItem('inProgressRecipes');\n  };\n  const saveRecipeToLocalStorage = async (id) => {\n    let rawRecipe;\n    try {\n      rawRecipe = await fetchMealsById(id);\n    } catch {\n      rawRecipe = await fetchDrinksById(id);\n    }\n    const [favRecipe] = rawRecipe.meals || rawRecipe.drinks;\n    const favoriteRecipe = {\n      type: favRecipe.idMeal ? 'meal' : 'drink',\n      id: favRecipe.idMeal || favRecipe.idDrink,\n      category: favRecipe.strCategory,\n      nationality: favRecipe.strArea || '',\n      alcoholicOrNot: favRecipe.strAlcoholic || '',\n      name: favRecipe.strMeal || favRecipe.strDrink,\n      image: favRecipe.strMealThumb || favRecipe.strDrinkThumb,\n    };\n    let favoriteRecipes = JSON.parse(localStorage.getItem('favoriteRecipes'));\n    if (!favoriteRecipes) {\n      savePersonalData();\n      favoriteRecipes = JSON.parse(localStorage.getItem('favoriteRecipes'));\n    }\n    favoriteRecipes.push(favoriteRecipe);\n    localStorage.setItem('favoriteRecipes', JSON.stringify(favoriteRecipes));\n  };\n  const isRecipeOnLocalStorage = (id) => {\n    const favoriteRecipes = JSON.parse(localStorage.getItem('favoriteRecipes'));\n    if (favoriteRecipes) {\n      return favoriteRecipes.some((recipe) => String(recipe.id) === String(id));\n    }\n  };\n  const fetchMeals = async ({ filter }) => {\n    switch (filterType.filter) {\n    case 'ingredients': {\n      const byIngredients = await fetchMealsByIngredient(filter);\n      if (byIngredients.meals === null) {\n        global.alert(alertNull);\n      } else {\n        setMealsData([\n          ...byIngredients.meals,\n        ]);\n      }\n      break;\n    }\n    case 'name': {\n      const byName = await fetchMealsByName(filter);\n      if (byName.meals === null) {\n        global.alert(alertNull);\n      }\n      if (byName.meals) {\n        setMealsData([\n          ...byName.meals,\n        ]);\n      }\n      break;\n    }\n    case 'firstLetter': {\n      if (filter.length > 1) {\n        global.alert('Your search must have only 1 (one) character');\n      } else {\n        const byLetter = await fetchMealsByFistLetter(filter);\n        if (byLetter.meals === null) {\n          global.alert(alertNull);\n        } else {\n          setMealsData([\n            ...byLetter.meals,\n          ]);\n        }\n      }\n      break;\n    }\n    default: {\n      return 'null';\n    }\n    }\n  };\n  const fetchDrinks = async ({ filter }) => {\n    switch (filterType.filter) {\n    case 'ingredients': {\n      const byIngredients = await fetchDrinksByIngredient(filter);\n      if (byIngredients) {\n        setDrinkData([\n          ...byIngredients.drinks,\n        ]);\n      }\n      break;\n    }\n    case 'name': {\n      const byName = await fetchDrinksByName(filter);\n      if (byName.drinks === null) {\n        global.alert(alertNull);\n      }\n      if (byName.drinks) {\n        setDrinkData([\n          ...byName.drinks,\n        ]);\n      }\n      break;\n    }\n    case 'firstLetter': {\n      if (filter.length > 1) {\n        global.alert('Your search must have only 1 (one) character');\n      } else {\n        const byLetter = await fetchDrinksByFistLetter(filter);\n        if (byLetter.drinks === null) {\n          global.alert(alertNull);\n        } else {\n          setDrinkData([\n            ...byLetter.drinks,\n          ]);\n        }\n      }\n      break;\n    }\n    default: {\n      return 'null';\n    }\n    }\n  };\n  const filterHandleChange = ({ target: { value } }) => {\n    setFilterValue({\n      ...filterValue,\n      filter: value,\n    });\n  };\n  const context = {\n    handleChange,\n    disabled,\n    personalData,\n    savePersonalData,\n    setFilterType,\n    filterType,\n    filterValue,\n    setFilterValue,\n    filterHandleChange,\n    fetchMeals,\n    fetchDrinks,\n    mealsData,\n    drinkData,\n    setMealsData,\n    setDrinkData,\n    setPersonalData,\n    cleanupLocalStorage,\n    saveRecipeToLocalStorage,\n    removeRecipeFromLocalStorage,\n    isRecipeOnLocalStorage,\n    suggestionsToRender,\n    setSuggestionsToRender,\n  };\n  return (\n    <RecipesContext.Provider value={ context }>\n      {children}\n    </RecipesContext.Provider>\n  );\n}\nRecipesProvider.propTypes = { children: PropTypes.node.isRequired };\n\nexport default RecipesProvider;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}