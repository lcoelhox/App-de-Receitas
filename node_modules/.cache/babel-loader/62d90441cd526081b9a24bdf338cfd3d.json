{"ast":null,"code":"var _jsxFileName = \"/home/coelho/Projetos-Trybe/Projetos-Frontend/sd-023-a-project-recipes-app/src/pages/RecipeInProgress.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState, useContext } from 'react';\nimport PropTypes from 'prop-types';\nimport { useHistory } from 'react-router-dom';\nimport { fetchDrinksById, fetchMealsById } from '../services/fetchById';\nimport ButtonsFavorite from '../components/ButtonsFavorite';\nimport RecipesContext from '../hooks/RecipesContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst ingredientsToSave = [];\nconst inProgressRecipesLS = JSON.parse(localStorage.getItem('inProgressRecipes'));\nexport default function RecipeInProgress(_ref) {\n  _s();\n\n  let {\n    match: {\n      params: {\n        id\n      }\n    }\n  } = _ref;\n  const {\n    doneRecipes,\n    setDoneRecipes\n  } = useContext(RecipesContext);\n  const history = useHistory();\n  const pagePath = history.location.pathname;\n  const [recipesData, setRecipesData] = useState();\n  const [ingredients, setIngredients] = useState();\n  const [isChecked, setIsChecked] = useState(JSON.parse(localStorage.getItem('checkBoxBool')));\n  const twoSeconds = 2000; // const [doneRecipes, setDoneRecipes] = useState([]);\n\n  const getIngredients = () => {\n    if (recipesData) {\n      Object.keys(recipesData).forEach(key => {\n        if (key.includes('strIngredient') && recipesData[key] !== null && recipesData[key] !== '') {\n          setIngredients(prev => {\n            if (prev) {\n              return [...prev, recipesData[key]];\n            }\n\n            return [recipesData[key]];\n          });\n        }\n      });\n    }\n  };\n\n  const fetchInProgress = async () => {\n    if (pagePath.includes('meals')) {\n      const inProgress = await fetchMealsById(id);\n      const {\n        meals\n      } = await inProgress;\n      setRecipesData({ ...meals[0]\n      });\n    }\n\n    if (pagePath.includes('drinks')) {\n      const inProgress = await fetchDrinksById(id);\n      const {\n        drinks\n      } = await inProgress;\n      setRecipesData({ ...drinks[0]\n      });\n    }\n  };\n\n  const saveIsChecked = () => {\n    localStorage.setItem('checkBoxBool', JSON.stringify(isChecked));\n  };\n\n  const setStateChecked = (ingredient, bool) => {\n    setIsChecked(prevState => ({ ...prevState,\n      [ingredient]: bool\n    }));\n  };\n\n  const saveDoneRecipes = () => {\n    const prevStore = [...JSON.parse(localStorage.getItem('doneRecipes'))];\n    let recipes = [...doneRecipes];\n\n    if (prevStore) {\n      recipes = [...recipes, ...prevStore];\n    }\n\n    setDoneRecipes([...recipes]);\n\n    if (pagePath.includes('meals')) {\n      recipes = [...doneRecipes, {\n        id: recipesData.idMeal,\n        type: 'Meal',\n        nationality: recipesData.strArea,\n        alcoholicOrNot: '',\n        name: recipesData.strMeal,\n        image: recipesData.strMealThumb,\n        doneDate: new Date().toLocaleDateString(),\n        tag: [recipesData.strTags && recipesData.strTags.split(',')]\n      }];\n    } else {\n      recipes = [...doneRecipes, {\n        id: recipesData.idDrink,\n        type: 'Drink',\n        nationality: recipesData.strArea,\n        alcoholicOrNot: recipesData.strAlcoholic,\n        name: recipesData.strDrink,\n        image: recipesData.strDrinkThumb,\n        doneDate: new Date().toLocaleDateString(),\n        tag: [recipesData.strTags && recipesData.strTags.split(',')]\n      }];\n    }\n\n    setDoneRecipes([...recipes]);\n    localStorage.setItem('doneRecipes', JSON.stringify(recipes));\n    setTimeout(() => {\n      history.push('/done-recipes');\n    }, twoSeconds);\n  };\n\n  const saveOnLocalStorage = _ref2 => {\n    let {\n      target: {\n        value,\n        checked\n      }\n    } = _ref2;\n\n    if (pagePath.includes('meals')) {\n      ingredientsToSave.push(value);\n      localStorage.setItem('inProgressRecipes', JSON.stringify({ ...inProgressRecipesLS,\n        meals: { ...(inProgressRecipesLS === null || inProgressRecipesLS === void 0 ? void 0 : inProgressRecipesLS.meals),\n          [id]: ingredientsToSave\n        }\n      }));\n    }\n\n    if (pagePath.includes('drinks')) {\n      ingredientsToSave.push(value);\n      localStorage.setItem('inProgressRecipes', JSON.stringify({ ...inProgressRecipesLS,\n        drinks: { ...(inProgressRecipesLS === null || inProgressRecipesLS === void 0 ? void 0 : inProgressRecipesLS.drinks),\n          [id]: ingredientsToSave\n        }\n      }));\n    }\n\n    setStateChecked(value, checked);\n  };\n\n  useEffect(() => {\n    saveIsChecked();\n  }, [isChecked]);\n  useEffect(() => {\n    fetchInProgress();\n    saveIsChecked();\n  }, []);\n  useEffect(() => {\n    getIngredients();\n  }, [recipesData]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(ButtonsFavorite, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 148,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 147,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: recipesData && (pagePath.includes('drinks') ? /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: recipesData.strDrinkThumb,\n          alt: recipesData.strDrink,\n          \"data-testid\": \"recipe-photo\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          \"data-testid\": \"recipe-title\",\n          children: recipesData.strDrink\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 159,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          \"data-testid\": \"recipe-category\",\n          children: recipesData.strCategory\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 160,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          \"data-testid\": \"instructions\",\n          children: recipesData.strInstructions\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 161,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"toDo\",\n          children: ingredients && ingredients.map((ingredient, i) => /*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: `ingredient${i}`,\n            \"data-testid\": `${i}-ingredient-step`,\n            style: {\n              textDecorationLine: isChecked && isChecked[ingredient] ? 'line-through' : 'none'\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"checkbox\",\n              name: ingredient,\n              className: \"ingredients-checkbox\",\n              id: `ingredient${i}`,\n              value: ingredient,\n              onChange: saveOnLocalStorage,\n              checked: isChecked && isChecked[ingredient]\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 171,\n              columnNumber: 21\n            }, this), ingredient]\n          }, `${ingredient}-${i}`, true, {\n            fileName: _jsxFileName,\n            lineNumber: 164,\n            columnNumber: 19\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 162,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          \"data-testid\": \"finish-recipe-btn\",\n          disabled: isChecked ? !Object.values(isChecked).every(check => check === true) : true,\n          onClick: saveDoneRecipes,\n          children: \"Finish\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 184,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: recipesData.strMealThumb,\n          alt: recipesData.strMeal,\n          \"data-testid\": \"recipe-photo\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 196,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          \"data-testid\": \"recipe-title\",\n          children: recipesData.strMeal\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 201,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          \"data-testid\": \"recipe-category\",\n          children: recipesData.strCategory\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 202,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          \"data-testid\": \"instructions\",\n          children: recipesData.strInstructions\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 203,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"toDo\",\n          children: ingredients && ingredients.map((ingredient, i) => /*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: `ingredient${i}`,\n            \"data-testid\": `${i}-ingredient-step`,\n            style: {\n              textDecorationLine: isChecked && isChecked[ingredient] ? 'line-through' : 'none'\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"checkbox\",\n              className: \"ingredients-checkbox\",\n              name: ingredient,\n              id: `ingredient${i}`,\n              value: ingredient,\n              onChange: saveOnLocalStorage,\n              checked: isChecked && isChecked[ingredient]\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 213,\n              columnNumber: 21\n            }, this), ingredient]\n          }, `${ingredient}-${i}`, true, {\n            fileName: _jsxFileName,\n            lineNumber: 206,\n            columnNumber: 19\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 204,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          \"data-testid\": \"finish-recipe-btn\",\n          disabled: isChecked ? !Object.values(isChecked).every(check => check === true) : true,\n          onClick: saveDoneRecipes,\n          children: \"Finish\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 226,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s(RecipeInProgress, \"CJMbDpFUyHLVhngyzyoISWNRtzc=\", false, function () {\n  return [useHistory];\n});\n\n_c = RecipeInProgress;\nRecipeInProgress.propTypes = {\n  match: PropTypes.shape({\n    params: PropTypes.shape({\n      id: PropTypes.string\n    })\n  })\n}.isRequired;\n\nvar _c;\n\n$RefreshReg$(_c, \"RecipeInProgress\");","map":{"version":3,"names":["React","useEffect","useState","useContext","PropTypes","useHistory","fetchDrinksById","fetchMealsById","ButtonsFavorite","RecipesContext","ingredientsToSave","inProgressRecipesLS","JSON","parse","localStorage","getItem","RecipeInProgress","match","params","id","doneRecipes","setDoneRecipes","history","pagePath","location","pathname","recipesData","setRecipesData","ingredients","setIngredients","isChecked","setIsChecked","twoSeconds","getIngredients","Object","keys","forEach","key","includes","prev","fetchInProgress","inProgress","meals","drinks","saveIsChecked","setItem","stringify","setStateChecked","ingredient","bool","prevState","saveDoneRecipes","prevStore","recipes","idMeal","type","nationality","strArea","alcoholicOrNot","name","strMeal","image","strMealThumb","doneDate","Date","toLocaleDateString","tag","strTags","split","idDrink","strAlcoholic","strDrink","strDrinkThumb","setTimeout","push","saveOnLocalStorage","target","value","checked","strCategory","strInstructions","map","i","textDecorationLine","values","every","check","propTypes","shape","string","isRequired"],"sources":["/home/coelho/Projetos-Trybe/Projetos-Frontend/sd-023-a-project-recipes-app/src/pages/RecipeInProgress.jsx"],"sourcesContent":["import React, { useEffect, useState, useContext } from 'react';\nimport PropTypes from 'prop-types';\nimport { useHistory } from 'react-router-dom';\nimport { fetchDrinksById, fetchMealsById } from '../services/fetchById';\nimport ButtonsFavorite from '../components/ButtonsFavorite';\nimport RecipesContext from '../hooks/RecipesContext';\n\nconst ingredientsToSave = [];\nconst inProgressRecipesLS = JSON.parse(localStorage.getItem('inProgressRecipes'));\nexport default function RecipeInProgress({ match: { params: { id } } }) {\n  const { doneRecipes, setDoneRecipes } = useContext(RecipesContext);\n  const history = useHistory();\n  const pagePath = history.location.pathname;\n  const [recipesData, setRecipesData] = useState();\n  const [ingredients, setIngredients] = useState();\n  const [isChecked, setIsChecked] = useState(\n    JSON.parse(localStorage.getItem('checkBoxBool')),\n  );\n  const twoSeconds = 2000;\n  // const [doneRecipes, setDoneRecipes] = useState([]);\n  const getIngredients = () => {\n    if (recipesData) {\n      Object.keys(recipesData).forEach((key) => {\n        if (key.includes('strIngredient')\n      && recipesData[key] !== null\n      && recipesData[key] !== '') {\n          setIngredients((prev) => {\n            if (prev) {\n              return [\n                ...prev,\n                recipesData[key],\n              ];\n            }\n            return [recipesData[key]];\n          });\n        }\n      });\n    }\n  };\n\n  const fetchInProgress = async () => {\n    if (pagePath.includes('meals')) {\n      const inProgress = await fetchMealsById(id);\n      const { meals } = await inProgress;\n      setRecipesData({\n        ...meals[0],\n      });\n    } if (pagePath.includes('drinks')) {\n      const inProgress = await fetchDrinksById(id);\n      const { drinks } = await inProgress;\n      setRecipesData({\n        ...drinks[0],\n      });\n    }\n  };\n\n  const saveIsChecked = () => {\n    localStorage.setItem('checkBoxBool', JSON.stringify(isChecked));\n  };\n\n  const setStateChecked = (ingredient, bool) => {\n    setIsChecked((prevState) => ({\n      ...prevState,\n      [ingredient]: bool,\n    }));\n  };\n\n  const saveDoneRecipes = () => {\n    const prevStore = [...JSON.parse(localStorage.getItem('doneRecipes'))];\n    let recipes = [...doneRecipes];\n    if (prevStore) {\n      recipes = [...recipes, ...prevStore];\n    }\n    setDoneRecipes([...recipes]);\n    if (pagePath.includes('meals')) {\n      recipes = [\n        ...doneRecipes,\n        {\n          id: recipesData.idMeal,\n          type: 'Meal',\n          nationality: recipesData.strArea,\n          alcoholicOrNot: '',\n          name: recipesData.strMeal,\n          image: recipesData.strMealThumb,\n          doneDate: new Date().toLocaleDateString(),\n          tag: [recipesData.strTags && recipesData.strTags.split(',')],\n        },\n      ];\n    } else {\n      recipes = [\n        ...doneRecipes,\n        {\n          id: recipesData.idDrink,\n          type: 'Drink',\n          nationality: recipesData.strArea,\n          alcoholicOrNot: recipesData.strAlcoholic,\n          name: recipesData.strDrink,\n          image: recipesData.strDrinkThumb,\n          doneDate: new Date().toLocaleDateString(),\n          tag: [recipesData.strTags && recipesData.strTags.split(',')],\n        },\n      ];\n    }\n    setDoneRecipes([...recipes]);\n    localStorage.setItem('doneRecipes', JSON\n      .stringify(recipes));\n    setTimeout(() => {\n      history.push('/done-recipes');\n    }, twoSeconds);\n  };\n\n  const saveOnLocalStorage = ({ target: { value, checked } }) => {\n    if (pagePath.includes('meals')) {\n      ingredientsToSave.push(value);\n      localStorage.setItem('inProgressRecipes', JSON.stringify({\n        ...inProgressRecipesLS,\n        meals: {\n          ...inProgressRecipesLS?.meals,\n          [id]: ingredientsToSave,\n        },\n      }));\n    } if (pagePath.includes('drinks')) {\n      ingredientsToSave.push(value);\n      localStorage.setItem('inProgressRecipes', JSON.stringify({\n        ...inProgressRecipesLS,\n        drinks: {\n          ...inProgressRecipesLS?.drinks,\n          [id]: ingredientsToSave,\n        },\n      }));\n    }\n    setStateChecked(value, checked);\n  };\n\n  useEffect(() => {\n    saveIsChecked();\n  }, [isChecked]);\n  useEffect(() => {\n    fetchInProgress();\n    saveIsChecked();\n  }, []);\n  useEffect(() => {\n    getIngredients();\n  }, [recipesData]);\n  return (\n    <>\n      <div>\n        <ButtonsFavorite />\n      </div>\n      <div>\n        {recipesData && (\n          pagePath.includes('drinks') ? (\n            <>\n              <img\n                src={ recipesData.strDrinkThumb }\n                alt={ recipesData.strDrink }\n                data-testid=\"recipe-photo\"\n              />\n              <h3 data-testid=\"recipe-title\">{recipesData.strDrink}</h3>\n              <p data-testid=\"recipe-category\">{ recipesData.strCategory }</p>\n              <p data-testid=\"instructions\">{ recipesData.strInstructions }</p>\n              <div className=\"toDo\">\n                {ingredients && ingredients.map((ingredient, i) => (\n                  <label\n                    key={ `${ingredient}-${i}` }\n                    htmlFor={ `ingredient${i}` }\n                    data-testid={ `${i}-ingredient-step` }\n                    style={ { textDecorationLine: isChecked\n                        && isChecked[ingredient] ? 'line-through' : 'none' } }\n                  >\n                    <input\n                      type=\"checkbox\"\n                      name={ ingredient }\n                      className=\"ingredients-checkbox\"\n                      id={ `ingredient${i}` }\n                      value={ ingredient }\n                      onChange={ saveOnLocalStorage }\n                      checked={ isChecked && isChecked[ingredient] }\n                    />\n                    { ingredient }\n                  </label>\n                ))}\n              </div>\n              <button\n                type=\"button\"\n                data-testid=\"finish-recipe-btn\"\n                disabled={ isChecked ? !Object.values(isChecked)\n                  .every((check) => check === true) : true }\n                onClick={ saveDoneRecipes }\n              >\n                Finish\n              </button>\n            </>\n          ) : (\n            <>\n              <img\n                src={ recipesData.strMealThumb }\n                alt={ recipesData.strMeal }\n                data-testid=\"recipe-photo\"\n              />\n              <h3 data-testid=\"recipe-title\">{recipesData.strMeal}</h3>\n              <p data-testid=\"recipe-category\">{ recipesData.strCategory }</p>\n              <p data-testid=\"instructions\">{ recipesData.strInstructions }</p>\n              <div className=\"toDo\">\n                {ingredients && ingredients.map((ingredient, i) => (\n                  <label\n                    key={ `${ingredient}-${i}` }\n                    htmlFor={ `ingredient${i}` }\n                    data-testid={ `${i}-ingredient-step` }\n                    style={ { textDecorationLine: isChecked\n                      && isChecked[ingredient] ? 'line-through' : 'none' } }\n                  >\n                    <input\n                      type=\"checkbox\"\n                      className=\"ingredients-checkbox\"\n                      name={ ingredient }\n                      id={ `ingredient${i}` }\n                      value={ ingredient }\n                      onChange={ saveOnLocalStorage }\n                      checked={ isChecked && isChecked[ingredient] }\n                    />\n                    { ingredient }\n                  </label>\n                ))}\n              </div>\n              <button\n                type=\"button\"\n                data-testid=\"finish-recipe-btn\"\n                disabled={ isChecked ? !Object.values(isChecked)\n                  .every((check) => check === true) : true }\n                onClick={ saveDoneRecipes }\n              >\n                Finish\n              </button>\n            </>\n          )\n        )}\n      </div>\n    </>\n  );\n}\n\nRecipeInProgress.propTypes = {\n  match: PropTypes.shape({\n    params: PropTypes.shape({\n      id: PropTypes.string,\n    }),\n  }),\n}.isRequired;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}