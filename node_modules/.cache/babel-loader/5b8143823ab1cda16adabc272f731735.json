{"ast":null,"code":"var _jsxFileName = \"/home/coelho/Projetos-Trybe/Projetos-Frontend/sd-023-a-project-recipes-app/src/pages/RecipeInProgress.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { useHistory } from 'react-router-dom';\nimport { fetchDrinksById, fetchMealsById } from '../services/fetchById';\nimport shareIcon from '../images/shareIcon.svg';\nimport favoriteIcon from '../images/whiteHeartIcon.svg';\nimport '../css/checkbox.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function RecipeInProgress(_ref) {\n  _s();\n\n  let {\n    match: {\n      params: {\n        id\n      }\n    }\n  } = _ref;\n  const history = useHistory();\n  const pagePath = history.location.pathname;\n  const [recipesData, setRecipesData] = useState();\n  const [ingredients, setIngredients] = useState();\n\n  const getIngredients = () => {\n    if (recipesData) {\n      Object.keys(recipesData).forEach(key => {\n        if (key.includes('strIngredient') && recipesData[key] !== null && recipesData[key] !== '') {\n          setIngredients(prev => {\n            if (prev) {\n              return [...prev, recipesData[key]];\n            }\n\n            return [recipesData[key]];\n          });\n        }\n      });\n    }\n  };\n\n  const fetchInProgress = async () => {\n    if (pagePath.includes('meals')) {\n      const inProgress = await fetchMealsById(id);\n      const {\n        meals\n      } = await inProgress;\n      setRecipesData({ ...meals[0]\n      });\n    }\n\n    if (pagePath.includes('drinks')) {\n      const inProgress = await fetchDrinksById(id);\n      const {\n        drinks\n      } = await inProgress;\n      setRecipesData({ ...drinks[0]\n      });\n    }\n  };\n\n  useEffect(() => {\n    fetchInProgress();\n  }, []);\n  useEffect(() => {\n    getIngredients();\n  }, [recipesData]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        \"data-testid\": \"share-btn\",\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: shareIcon,\n          alt: \"share\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        type: \"button\",\n        \"data-testid\": \"favorite-btn\",\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          src: favoriteIcon,\n          alt: \"favorite\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: recipesData && (pagePath.includes('drinks') ? /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: recipesData.strDrinkThumb,\n          alt: recipesData.strDrink,\n          \"data-testid\": \"recipe-photo\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          \"data-testid\": \"recipe-title\",\n          children: recipesData.strDrink\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          \"data-testid\": \"recipe-category\",\n          children: recipesData.strCategory\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          \"data-testid\": \"instructions\",\n          children: recipesData.strInstructions\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"toDo\",\n          children: ingredients && ingredients.map((ingredient, i) => /*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: `ingredient${i}`,\n            \"data-testid\": `${i}-ingredient-step`,\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"checkbox\",\n              name: ingredient,\n              className: \"ingredients-checkbox\",\n              id: `ingredient${i}`,\n              value: ingredient\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 93,\n              columnNumber: 21\n            }, this), ingredient]\n          }, `${ingredient}-${i}`, true, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 19\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          \"data-testid\": \"finish-recipe-btn\",\n          children: \"Finish\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: recipesData.strMealThumb,\n          alt: recipesData.strMeal,\n          \"data-testid\": \"recipe-photo\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          \"data-testid\": \"recipe-title\",\n          children: recipesData.strMeal\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          \"data-testid\": \"recipe-category\",\n          children: recipesData.strCategory\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          \"data-testid\": \"instructions\",\n          children: recipesData.strInstructions\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"toDo\",\n          children: ingredients && ingredients.map((ingredient, i) => /*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: `ingredient${i}`,\n            \"data-testid\": `${i}-ingredient-step`,\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"checkbox\",\n              className: \"ingredients-checkbox\",\n              name: ingredient,\n              id: `ingredient${i}`,\n              value: ingredient\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 123,\n              columnNumber: 21\n            }, this), ingredient]\n          }, `${ingredient}-${i}`, true, {\n            fileName: _jsxFileName,\n            lineNumber: 118,\n            columnNumber: 19\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          \"data-testid\": \"finish-recipe-btn\",\n          children: \"Finish\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s(RecipeInProgress, \"q3HQ3xVOQ7DFa5S1q0yRWwnGeLk=\", false, function () {\n  return [useHistory];\n});\n\n_c = RecipeInProgress;\nRecipeInProgress.propTypes = {\n  match: PropTypes.shape({\n    params: PropTypes.shape({\n      id: PropTypes.string\n    })\n  })\n}.isRequired;\n\nvar _c;\n\n$RefreshReg$(_c, \"RecipeInProgress\");","map":{"version":3,"names":["React","useEffect","useState","PropTypes","useHistory","fetchDrinksById","fetchMealsById","shareIcon","favoriteIcon","RecipeInProgress","match","params","id","history","pagePath","location","pathname","recipesData","setRecipesData","ingredients","setIngredients","getIngredients","Object","keys","forEach","key","includes","prev","fetchInProgress","inProgress","meals","drinks","strDrinkThumb","strDrink","strCategory","strInstructions","map","ingredient","i","strMealThumb","strMeal","propTypes","shape","string","isRequired"],"sources":["/home/coelho/Projetos-Trybe/Projetos-Frontend/sd-023-a-project-recipes-app/src/pages/RecipeInProgress.jsx"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { useHistory } from 'react-router-dom';\nimport { fetchDrinksById, fetchMealsById } from '../services/fetchById';\nimport shareIcon from '../images/shareIcon.svg';\nimport favoriteIcon from '../images/whiteHeartIcon.svg';\nimport '../css/checkbox.css';\n\nexport default function RecipeInProgress({ match: { params: { id } } }) {\n  const history = useHistory();\n  const pagePath = history.location.pathname;\n  const [recipesData, setRecipesData] = useState();\n  const [ingredients, setIngredients] = useState();\n\n  const getIngredients = () => {\n    if (recipesData) {\n      Object.keys(recipesData).forEach((key) => {\n        if (key.includes('strIngredient')\n      && recipesData[key] !== null\n      && recipesData[key] !== '') {\n          setIngredients((prev) => {\n            if (prev) {\n              return [\n                ...prev,\n                recipesData[key],\n              ];\n            }\n            return [recipesData[key]];\n          });\n        }\n      });\n    }\n  };\n\n  const fetchInProgress = async () => {\n    if (pagePath.includes('meals')) {\n      const inProgress = await fetchMealsById(id);\n      const { meals } = await inProgress;\n      setRecipesData({\n        ...meals[0],\n      });\n    } if (pagePath.includes('drinks')) {\n      const inProgress = await fetchDrinksById(id);\n      const { drinks } = await inProgress;\n      setRecipesData({\n        ...drinks[0],\n      });\n    }\n  };\n\n  useEffect(() => {\n    fetchInProgress();\n  }, []);\n\n  useEffect(() => {\n    getIngredients();\n  }, [recipesData]);\n  return (\n    <>\n      <div>\n        <button\n          type=\"button\"\n          data-testid=\"share-btn\"\n        >\n          <img src={ shareIcon } alt=\"share\" />\n        </button>\n        <button\n          type=\"button\"\n          data-testid=\"favorite-btn\"\n        >\n          <img src={ favoriteIcon } alt=\"favorite\" />\n        </button>\n      </div>\n      <div>\n        {recipesData && (\n          pagePath.includes('drinks') ? (\n            <>\n              <img\n                src={ recipesData.strDrinkThumb }\n                alt={ recipesData.strDrink }\n                data-testid=\"recipe-photo\"\n              />\n              <h3 data-testid=\"recipe-title\">{recipesData.strDrink}</h3>\n              <p data-testid=\"recipe-category\">{ recipesData.strCategory }</p>\n              <p data-testid=\"instructions\">{ recipesData.strInstructions }</p>\n              <div className=\"toDo\">\n                {ingredients && ingredients.map((ingredient, i) => (\n                  <label\n                    key={ `${ingredient}-${i}` }\n                    htmlFor={ `ingredient${i}` }\n                    data-testid={ `${i}-ingredient-step` }\n                  >\n                    <input\n                      type=\"checkbox\"\n                      name={ ingredient }\n                      className=\"ingredients-checkbox\"\n                      id={ `ingredient${i}` }\n                      value={ ingredient }\n                    />\n                    { ingredient }\n                  </label>\n                ))}\n              </div>\n              <button type=\"button\" data-testid=\"finish-recipe-btn\">Finish</button>\n            </>\n          ) : (\n            <>\n              <img\n                src={ recipesData.strMealThumb }\n                alt={ recipesData.strMeal }\n                data-testid=\"recipe-photo\"\n              />\n              <h3 data-testid=\"recipe-title\">{recipesData.strMeal}</h3>\n              <p data-testid=\"recipe-category\">{ recipesData.strCategory }</p>\n              <p data-testid=\"instructions\">{ recipesData.strInstructions }</p>\n              <div className=\"toDo\">\n                {ingredients && ingredients.map((ingredient, i) => (\n                  <label\n                    key={ `${ingredient}-${i}` }\n                    htmlFor={ `ingredient${i}` }\n                    data-testid={ `${i}-ingredient-step` }\n                  >\n                    <input\n                      type=\"checkbox\"\n                      className=\"ingredients-checkbox\"\n                      name={ ingredient }\n                      id={ `ingredient${i}` }\n                      value={ ingredient }\n                    />\n                    { ingredient }\n                  </label>\n                ))}\n              </div>\n              <button type=\"button\" data-testid=\"finish-recipe-btn\">Finish</button>\n            </>\n          )\n        )}\n      </div>\n    </>\n  );\n}\n\nRecipeInProgress.propTypes = {\n  match: PropTypes.shape({\n    params: PropTypes.shape({\n      id: PropTypes.string,\n    }),\n  }),\n}.isRequired;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}