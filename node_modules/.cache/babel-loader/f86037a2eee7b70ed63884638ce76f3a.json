{"ast":null,"code":"var _jsxFileName = \"/home/coelho/Projetos-Trybe/Projetos-Frontend/sd-023-a-project-recipes-app/src/pages/RecipeInProgress.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState, useContext } from 'react';\nimport PropTypes from 'prop-types';\nimport { useHistory } from 'react-router-dom';\nimport { fetchDrinksById, fetchMealsById } from '../services/fetchById';\nimport ButtonsFavorite from '../components/ButtonsFavorite';\nimport RecipesContext from '../hooks/RecipesContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst ingredientsToSave = [];\nconst inProgressRecipesLS = JSON.parse(localStorage.getItem('inProgressRecipes'));\nexport default function RecipeInProgress(_ref) {\n  _s();\n\n  let {\n    match: {\n      params: {\n        id\n      }\n    }\n  } = _ref;\n  const {\n    doneRecipes,\n    setDoneRecipes\n  } = useContext(RecipesContext);\n  const history = useHistory();\n  const pagePath = history.location.pathname;\n  const [recipesData, setRecipesData] = useState();\n  const [ingredients, setIngredients] = useState();\n  const readIngredientsS = JSON.parse(localStorage.getItem('inProgressRecipes'));\n  const progressKey = pagePath.includes('meals') ? 'meals' : 'drinks';\n  const startIngredients = readIngredientsS()[progressKey][id] || [];\n  const initialChecks = readIngredientsS ? ingredients.map(ingredient => startIngredients.includes(ingredient)) : null;\n  const [isChecked, setIsChecked] = useState(initialChecks);\n  const twoSeconds = 2000; // const [doneRecipes, setDoneRecipes] = useState([]);\n\n  const getIngredients = () => {\n    if (recipesData) {\n      Object.keys(recipesData).forEach(key => {\n        if (key.includes('strIngredient') && recipesData[key] !== null && recipesData[key] !== '') {\n          setIngredients(prev => {\n            if (prev) {\n              return [...prev, recipesData[key]];\n            }\n\n            return [recipesData[key]];\n          });\n        }\n      });\n    }\n  };\n\n  console.log(isChecked);\n\n  const fetchInProgress = async () => {\n    if (pagePath.includes('meals')) {\n      const inProgress = await fetchMealsById(id);\n      const {\n        meals\n      } = await inProgress;\n      setRecipesData({ ...meals[0]\n      });\n    }\n\n    if (pagePath.includes('drinks')) {\n      const inProgress = await fetchDrinksById(id);\n      const {\n        drinks\n      } = await inProgress;\n      setRecipesData({ ...drinks[0]\n      });\n    }\n  };\n\n  const saveIsChecked = () => {\n    localStorage.setItem('checkBoxBool', JSON.stringify(isChecked));\n  };\n\n  const setStateChecked = (ingredient, bool) => {\n    setIsChecked(prevState => ({ ...prevState,\n      [ingredient]: bool\n    }));\n  };\n\n  const saveDoneRecipes = () => {\n    const prevStore = [...JSON.parse(localStorage.getItem('doneRecipes'))];\n    let recipes = [...doneRecipes];\n\n    if (prevStore) {\n      recipes = [...recipes, ...prevStore];\n    }\n\n    setDoneRecipes([...recipes]);\n\n    if (pagePath.includes('meals')) {\n      recipes = [...doneRecipes, {\n        id: recipesData.idMeal,\n        type: 'Meal',\n        nationality: recipesData.strArea,\n        alcoholicOrNot: '',\n        name: recipesData.strMeal,\n        image: recipesData.strMealThumb,\n        doneDate: new Date().toLocaleDateString(),\n        tag: [recipesData.strTags && recipesData.strTags.split(',')]\n      }];\n    } else {\n      recipes = [...doneRecipes, {\n        id: recipesData.idDrink,\n        type: 'Drink',\n        nationality: recipesData.strArea,\n        alcoholicOrNot: recipesData.strAlcoholic,\n        name: recipesData.strDrink,\n        image: recipesData.strDrinkThumb,\n        doneDate: new Date().toLocaleDateString(),\n        tag: [recipesData.strTags && recipesData.strTags.split(',')]\n      }];\n    }\n\n    setDoneRecipes([...recipes]);\n    localStorage.setItem('doneRecipes', JSON.stringify(recipes));\n    setTimeout(() => {\n      history.push('/done-recipes');\n    }, twoSeconds);\n  };\n\n  const saveOnLocalStorage = _ref2 => {\n    let {\n      target: {\n        value,\n        checked\n      }\n    } = _ref2;\n\n    if (pagePath.includes('meals')) {\n      ingredientsToSave.push(value);\n      localStorage.setItem('inProgressRecipes', JSON.stringify({ ...inProgressRecipesLS,\n        meals: { ...(inProgressRecipesLS === null || inProgressRecipesLS === void 0 ? void 0 : inProgressRecipesLS.meals),\n          [id]: ingredientsToSave\n        }\n      }));\n    }\n\n    if (pagePath.includes('drinks')) {\n      ingredientsToSave.push(value);\n      localStorage.setItem('inProgressRecipes', JSON.stringify({ ...inProgressRecipesLS,\n        drinks: { ...(inProgressRecipesLS === null || inProgressRecipesLS === void 0 ? void 0 : inProgressRecipesLS.drinks),\n          [id]: ingredientsToSave\n        }\n      }));\n    }\n\n    setStateChecked(value, checked);\n  };\n\n  useEffect(() => {\n    saveIsChecked();\n  }, [isChecked]);\n  useEffect(() => {\n    fetchInProgress();\n    saveIsChecked();\n  }, []);\n  useEffect(() => {\n    getIngredients();\n  }, [recipesData]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(ButtonsFavorite, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: recipesData && (pagePath.includes('drinks') ? /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: recipesData.strDrinkThumb,\n          alt: recipesData.strDrink,\n          \"data-testid\": \"recipe-photo\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 156,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          \"data-testid\": \"recipe-title\",\n          children: recipesData.strDrink\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 161,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          \"data-testid\": \"recipe-category\",\n          children: recipesData.strCategory\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 162,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          \"data-testid\": \"instructions\",\n          children: recipesData.strInstructions\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 163,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"toDo\",\n          children: ingredients && ingredients.map((ingredient, i) => /*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: `ingredient${i}`,\n            \"data-testid\": `${i}-ingredient-step`,\n            style: {\n              textDecorationLine: isChecked && isChecked[ingredient] ? 'line-through' : 'none'\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"checkbox\",\n              name: ingredient,\n              className: \"ingredients-checkbox\",\n              id: `ingredient${i}`,\n              value: ingredient,\n              onChange: saveOnLocalStorage,\n              checked: isChecked && isChecked[ingredient]\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 173,\n              columnNumber: 21\n            }, this), ingredient]\n          }, `${ingredient}-${i}`, true, {\n            fileName: _jsxFileName,\n            lineNumber: 166,\n            columnNumber: 19\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 164,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          \"data-testid\": \"finish-recipe-btn\",\n          disabled: isChecked ? !Object.values(isChecked).every(check => check === true) : true,\n          onClick: saveDoneRecipes,\n          children: \"Finish\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 186,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"img\", {\n          src: recipesData.strMealThumb,\n          alt: recipesData.strMeal,\n          \"data-testid\": \"recipe-photo\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 198,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"h3\", {\n          \"data-testid\": \"recipe-title\",\n          children: recipesData.strMeal\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 203,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          \"data-testid\": \"recipe-category\",\n          children: recipesData.strCategory\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 204,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          \"data-testid\": \"instructions\",\n          children: recipesData.strInstructions\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 205,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"toDo\",\n          children: ingredients && ingredients.map((ingredient, i) => /*#__PURE__*/_jsxDEV(\"label\", {\n            htmlFor: `ingredient${i}`,\n            \"data-testid\": `${i}-ingredient-step`,\n            style: {\n              textDecorationLine: isChecked && isChecked[ingredient] ? 'line-through' : 'none'\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"checkbox\",\n              className: \"ingredients-checkbox\",\n              name: ingredient,\n              id: `ingredient${i}`,\n              value: ingredient,\n              onChange: saveOnLocalStorage,\n              checked: isChecked && isChecked[ingredient]\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 215,\n              columnNumber: 21\n            }, this), ingredient]\n          }, `${ingredient}-${i}`, true, {\n            fileName: _jsxFileName,\n            lineNumber: 208,\n            columnNumber: 19\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 206,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          type: \"button\",\n          \"data-testid\": \"finish-recipe-btn\",\n          disabled: isChecked ? !Object.values(isChecked).every(check => check === true) : true,\n          onClick: saveDoneRecipes,\n          children: \"Finish\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 228,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s(RecipeInProgress, \"OCtUZdIRhe/GiSAprGSObZxwVJw=\", false, function () {\n  return [useHistory];\n});\n\n_c = RecipeInProgress;\nRecipeInProgress.propTypes = {\n  match: PropTypes.shape({\n    params: PropTypes.shape({\n      id: PropTypes.string\n    })\n  })\n}.isRequired;\n\nvar _c;\n\n$RefreshReg$(_c, \"RecipeInProgress\");","map":{"version":3,"names":["React","useEffect","useState","useContext","PropTypes","useHistory","fetchDrinksById","fetchMealsById","ButtonsFavorite","RecipesContext","ingredientsToSave","inProgressRecipesLS","JSON","parse","localStorage","getItem","RecipeInProgress","match","params","id","doneRecipes","setDoneRecipes","history","pagePath","location","pathname","recipesData","setRecipesData","ingredients","setIngredients","readIngredientsS","progressKey","includes","startIngredients","initialChecks","map","ingredient","isChecked","setIsChecked","twoSeconds","getIngredients","Object","keys","forEach","key","prev","console","log","fetchInProgress","inProgress","meals","drinks","saveIsChecked","setItem","stringify","setStateChecked","bool","prevState","saveDoneRecipes","prevStore","recipes","idMeal","type","nationality","strArea","alcoholicOrNot","name","strMeal","image","strMealThumb","doneDate","Date","toLocaleDateString","tag","strTags","split","idDrink","strAlcoholic","strDrink","strDrinkThumb","setTimeout","push","saveOnLocalStorage","target","value","checked","strCategory","strInstructions","i","textDecorationLine","values","every","check","propTypes","shape","string","isRequired"],"sources":["/home/coelho/Projetos-Trybe/Projetos-Frontend/sd-023-a-project-recipes-app/src/pages/RecipeInProgress.jsx"],"sourcesContent":["import React, { useEffect, useState, useContext } from 'react';\nimport PropTypes from 'prop-types';\nimport { useHistory } from 'react-router-dom';\nimport { fetchDrinksById, fetchMealsById } from '../services/fetchById';\nimport ButtonsFavorite from '../components/ButtonsFavorite';\nimport RecipesContext from '../hooks/RecipesContext';\n\nconst ingredientsToSave = [];\nconst inProgressRecipesLS = JSON.parse(localStorage.getItem('inProgressRecipes'));\nexport default function RecipeInProgress({ match: { params: { id } } }) {\n  const { doneRecipes, setDoneRecipes } = useContext(RecipesContext);\n  const history = useHistory();\n  const pagePath = history.location.pathname;\n  const [recipesData, setRecipesData] = useState();\n  const [ingredients, setIngredients] = useState();\n  const readIngredientsS = JSON.parse(localStorage.getItem('inProgressRecipes'));\n  const progressKey = pagePath.includes('meals') ? 'meals' : 'drinks';\n  const startIngredients = readIngredientsS()[progressKey][id] || [];\n  const initialChecks = readIngredientsS ? ingredients\n    .map((ingredient) => startIngredients\n      .includes(ingredient)) : null;\n  const [isChecked, setIsChecked] = useState(initialChecks);\n  const twoSeconds = 2000;\n  // const [doneRecipes, setDoneRecipes] = useState([]);\n  const getIngredients = () => {\n    if (recipesData) {\n      Object.keys(recipesData).forEach((key) => {\n        if (key.includes('strIngredient')\n      && recipesData[key] !== null\n      && recipesData[key] !== '') {\n          setIngredients((prev) => {\n            if (prev) {\n              return [\n                ...prev,\n                recipesData[key],\n              ];\n            }\n            return [recipesData[key]];\n          });\n        }\n      });\n    }\n  };\n  console.log(isChecked);\n\n  const fetchInProgress = async () => {\n    if (pagePath.includes('meals')) {\n      const inProgress = await fetchMealsById(id);\n      const { meals } = await inProgress;\n      setRecipesData({\n        ...meals[0],\n      });\n    } if (pagePath.includes('drinks')) {\n      const inProgress = await fetchDrinksById(id);\n      const { drinks } = await inProgress;\n      setRecipesData({\n        ...drinks[0],\n      });\n    }\n  };\n\n  const saveIsChecked = () => {\n    localStorage.setItem('checkBoxBool', JSON.stringify(isChecked));\n  };\n\n  const setStateChecked = (ingredient, bool) => {\n    setIsChecked((prevState) => ({\n      ...prevState,\n      [ingredient]: bool,\n    }));\n  };\n  const saveDoneRecipes = () => {\n    const prevStore = [...JSON.parse(localStorage.getItem('doneRecipes'))];\n    let recipes = [...doneRecipes];\n    if (prevStore) {\n      recipes = [...recipes, ...prevStore];\n    }\n    setDoneRecipes([...recipes]);\n    if (pagePath.includes('meals')) {\n      recipes = [\n        ...doneRecipes,\n        {\n          id: recipesData.idMeal,\n          type: 'Meal',\n          nationality: recipesData.strArea,\n          alcoholicOrNot: '',\n          name: recipesData.strMeal,\n          image: recipesData.strMealThumb,\n          doneDate: new Date().toLocaleDateString(),\n          tag: [recipesData.strTags && recipesData.strTags.split(',')],\n        },\n      ];\n    } else {\n      recipes = [\n        ...doneRecipes,\n        {\n          id: recipesData.idDrink,\n          type: 'Drink',\n          nationality: recipesData.strArea,\n          alcoholicOrNot: recipesData.strAlcoholic,\n          name: recipesData.strDrink,\n          image: recipesData.strDrinkThumb,\n          doneDate: new Date().toLocaleDateString(),\n          tag: [recipesData.strTags && recipesData.strTags.split(',')],\n        },\n      ];\n    }\n    setDoneRecipes([...recipes]);\n    localStorage.setItem('doneRecipes', JSON\n      .stringify(recipes));\n    setTimeout(() => {\n      history.push('/done-recipes');\n    }, twoSeconds);\n  };\n  const saveOnLocalStorage = ({ target: { value, checked } }) => {\n    if (pagePath.includes('meals')) {\n      ingredientsToSave.push(value);\n      localStorage.setItem('inProgressRecipes', JSON.stringify({\n        ...inProgressRecipesLS,\n        meals: {\n          ...inProgressRecipesLS?.meals,\n          [id]: ingredientsToSave,\n        },\n      }));\n    } if (pagePath.includes('drinks')) {\n      ingredientsToSave.push(value);\n      localStorage.setItem('inProgressRecipes', JSON.stringify({\n        ...inProgressRecipesLS,\n        drinks: {\n          ...inProgressRecipesLS?.drinks,\n          [id]: ingredientsToSave,\n        },\n      }));\n    }\n    setStateChecked(value, checked);\n  };\n  useEffect(() => {\n    saveIsChecked();\n  }, [isChecked]);\n  useEffect(() => {\n    fetchInProgress();\n    saveIsChecked();\n  }, []);\n  useEffect(() => {\n    getIngredients();\n  }, [recipesData]);\n  return (\n    <>\n      <div>\n        <ButtonsFavorite />\n      </div>\n      <div>\n        {recipesData && (\n          pagePath.includes('drinks') ? (\n            <>\n              <img\n                src={ recipesData.strDrinkThumb }\n                alt={ recipesData.strDrink }\n                data-testid=\"recipe-photo\"\n              />\n              <h3 data-testid=\"recipe-title\">{recipesData.strDrink}</h3>\n              <p data-testid=\"recipe-category\">{ recipesData.strCategory }</p>\n              <p data-testid=\"instructions\">{ recipesData.strInstructions }</p>\n              <div className=\"toDo\">\n                {ingredients && ingredients.map((ingredient, i) => (\n                  <label\n                    key={ `${ingredient}-${i}` }\n                    htmlFor={ `ingredient${i}` }\n                    data-testid={ `${i}-ingredient-step` }\n                    style={ { textDecorationLine: isChecked\n                        && isChecked[ingredient] ? 'line-through' : 'none' } }\n                  >\n                    <input\n                      type=\"checkbox\"\n                      name={ ingredient }\n                      className=\"ingredients-checkbox\"\n                      id={ `ingredient${i}` }\n                      value={ ingredient }\n                      onChange={ saveOnLocalStorage }\n                      checked={ isChecked && isChecked[ingredient] }\n                    />\n                    { ingredient }\n                  </label>\n                ))}\n              </div>\n              <button\n                type=\"button\"\n                data-testid=\"finish-recipe-btn\"\n                disabled={ isChecked ? !Object.values(isChecked)\n                  .every((check) => check === true) : true }\n                onClick={ saveDoneRecipes }\n              >\n                Finish\n              </button>\n            </>\n          ) : (\n            <>\n              <img\n                src={ recipesData.strMealThumb }\n                alt={ recipesData.strMeal }\n                data-testid=\"recipe-photo\"\n              />\n              <h3 data-testid=\"recipe-title\">{recipesData.strMeal}</h3>\n              <p data-testid=\"recipe-category\">{ recipesData.strCategory }</p>\n              <p data-testid=\"instructions\">{ recipesData.strInstructions }</p>\n              <div className=\"toDo\">\n                {ingredients && ingredients.map((ingredient, i) => (\n                  <label\n                    key={ `${ingredient}-${i}` }\n                    htmlFor={ `ingredient${i}` }\n                    data-testid={ `${i}-ingredient-step` }\n                    style={ { textDecorationLine: isChecked\n                      && isChecked[ingredient] ? 'line-through' : 'none' } }\n                  >\n                    <input\n                      type=\"checkbox\"\n                      className=\"ingredients-checkbox\"\n                      name={ ingredient }\n                      id={ `ingredient${i}` }\n                      value={ ingredient }\n                      onChange={ saveOnLocalStorage }\n                      checked={ isChecked && isChecked[ingredient] }\n                    />\n                    { ingredient }\n                  </label>\n                ))}\n              </div>\n              <button\n                type=\"button\"\n                data-testid=\"finish-recipe-btn\"\n                disabled={ isChecked ? !Object.values(isChecked)\n                  .every((check) => check === true) : true }\n                onClick={ saveDoneRecipes }\n              >\n                Finish\n              </button>\n            </>\n          )\n        )}\n      </div>\n    </>\n  );\n}\nRecipeInProgress.propTypes = {\n  match: PropTypes.shape({\n    params: PropTypes.shape({\n      id: PropTypes.string,\n    }),\n  }),\n}.isRequired;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}